{"version":3,"sources":["GraphPage.tsx","HomePage.tsx","UserPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["makeHumanReadable","input","ms","s","Math","floor","m","h","msString","toFixed","slice","sString","mString","hString","GraphPage","useParams","userId","categoryId","useState","isLoading","setIsLoading","isError","setIsError","errorMessage","setErrorMessage","gameName","setGameName","categoryName","setCategoryName","username","setUsername","runs","setRuns","getData","a","Promise","all","axios","get","SPEEDRUN_COM_URL","categoryData","userData","runsData","console","log","data","game","names","international","name","filter","run","status","map","date","Date","time","times","primary_t","message","useEffect","toUTCString","HomePage","searchValue","setSearchValue","results","setResults","getInfo","query","id","type","onChange","event","target","value","length","to","UserPage","setUserData","getUserData","userApiData","pbData","categories","category","gameId","error","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a756d64.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { SPEEDRUN_COM_URL } from './App';\n\n\ninterface Run {\n    date: Date;\n    time: number;\n};\n\nconst makeHumanReadable = (input: number): string => {\n    const ms = input % 1;\n    const s = Math.floor(input) % 60;\n    const m = Math.floor(input/60) % 60;\n    const h = Math.floor(input/3600);\n\n    const msString = ms === 0 ? \"\" : ms.toFixed(3).slice(1);\n\n    const sString = s < 10 ? `0${s}` : `${s}`;\n\n    const mString = m < 10 ? `0${m}` : `${m}`;\n    const hString = h === 0 ? \"\" : `${h}:`\n\n    return `${hString}${mString}:${sString}${msString}`\n}\n\nconst GraphPage = () => \n{\n    const {userId, categoryId} = useParams<{userId?: string, categoryId?: string}>()\n\n\n    let [isLoading, setIsLoading] = useState<boolean>(true);\n    let [isError, setIsError] = useState<boolean>(false);\n    let [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const [gameName, setGameName] = useState<string>(\"\");\n    const [categoryName, setCategoryName] = useState<string>(\"\");\n    const [username, setUsername] = useState<string>(\"\");\n\n    const [runs, setRuns] = useState<Run[]>([]);\n\n    const getData = async () => {\n        try {\n            let [categoryData, userData, runsData] = await Promise.all([\n                axios.get(`${SPEEDRUN_COM_URL}/categories/${categoryId}?embed=game`),\n                axios.get(`${SPEEDRUN_COM_URL}/users/${userId}`),\n                axios.get(`${SPEEDRUN_COM_URL}/runs?user=${userId}&category=${categoryId}`)\n            ])\n\n            console.log(runsData)\n            setGameName(categoryData.data.data.game.data.names.international);\n            setCategoryName(categoryData.data.data.name);\n\n            setUsername(userData.data.data.names.international)\n\n            setIsLoading(false);\n\n            setRuns(runsData.data.data\n                .filter((run: any) => run.status.status !== \"rejected\")\n                .map((run: any) => ({date: new Date(run.date), time: run.times.primary_t}))\n            )\n\n\n        } catch (e) {\n            setIsError(true);\n            setErrorMessage(e.message);\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {getData()}, [])\n    \n    if(isError) return(<p>Encountered error '{errorMessage}'</p>)\n    if(isLoading) return (<p>Loading...</p>)\n\n    return (\n        <>\n        <h1>{gameName} : {categoryName} - {username}</h1>\n        <ul>\n            {runs.map((run) => (\n                <li>\n                    {run.date.toUTCString()} : {makeHumanReadable(run.time)}\n                </li>\n            ))}\n        </ul>\n        </>\n    )\n}\nexport default GraphPage;","import axios from \"axios\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\n\n\ninterface User {\n    name: string,\n    id: string\n}\n\n\n\nconst HomePage = () => {\n    let [searchValue, setSearchValue] = useState<string>('');\n    let [results, setResults] = useState<User[]>([]);\n  \n    const getInfo = async (query: string) => {\n      try {\n          let {data} = await axios.get(`${SPEEDRUN_COM_URL}/users?name=${query}`)\n\n          console.log(data.data)\n\n          setResults(data.data.slice(0,5).map(\n              ({id, names}: any) => ({\n                  id, \n                  name: names.international\n              })\n          ))\n\n      } catch(error)  {\n          console.log(error.message);\n      };\n  }\n\n  \n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(event.target.value);\n        if(event.target.value.length >= 1) {\n            getInfo(event.target.value);\n        }\n        else {\n            setResults([])\n        }\n    }\n    return (\n      <>\n        <form>\n          <label>\n            Enter your username\n          </label>\n          <input type=\"text\" name=\"username\" onChange={handleInputChange} value={searchValue}/>\n          { searchValue.length > 0 ? (\n          <ul>\n            {results.length > 0 ?results.map(({id, name}) => (\n              <li><Link to={`/user/${id}`}>{name} </Link></li>\n            )) : (<p>No users found</p>)}\n          </ul>) : <></> }\n        </form>\n      </>\n    )\n  }\n\n  export default HomePage;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {Link, useParams} from 'react-router-dom';\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\ninterface Category {\n    gameName: string;\n    gameId: string;\n    categoryName: string;\n    categoryId: string;\n}\n\ninterface UserData {\n    id: string;\n    name: string;\n\n    categories: Category[]\n\n}\n\nconst UserPage =  () => {\n    let {id} = useParams<{id?: string}>();\n\n    let [isLoading, setIsLoading] = useState<boolean>(true);\n    let [isError, setIsError] = useState<boolean>(false);\n    let [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    let [userData, setUserData] = useState<UserData | null>(null);\n\n\n    const getUserData = async () => {\n        try {\n \n\n            let [userApiData, pbData] = await Promise.all([\n                axios.get(`${SPEEDRUN_COM_URL}/users/${id}`),\n                axios.get(`${SPEEDRUN_COM_URL}/users/${id}/personal-bests?embed=game,category`)\n            ])\n\n            setIsLoading(false);\n\n            console.log(pbData.data.data)\n\n            setUserData({\n                id: userApiData.data.data.id,\n                name: userApiData.data.data.names.international,\n                categories: pbData.data.data.map(({game, category}: any) => ({\n                    gameName: game.data.names.international,\n                    gameId: game.data.id,\n                    categoryName: category.data.name,\n                    categoryId: category.data.id\n                }))\n            })\n\n\n        } catch (error) {\n            setIsError(true);\n            setErrorMessage(error.message);\n            console.error(error);\n        }\n    }\n\n    useEffect(()=>{getUserData();},[]);\n\n    if(isError) return (<p>Error {errorMessage} occured.</p>)\n    if(isLoading) return (<p>Loading...</p>);\n\n    console.log(userData);\n\n    return (<>\n        <h2>{userData?.name}</h2>\n        <ul>\n            {userData?.categories.map((category: Category) => (\n                <li><Link to={`/graph/${userData?.id}/${category.categoryId}`}>{category.gameName}: {category.categoryName}</Link></li>\n            ))}\n        </ul>\n    </>);\n\n  }\n\nexport default UserPage;","import React from 'react';\n\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport GraphPage from './GraphPage';\n\nimport HomePage from './HomePage';\nimport UserPage from './UserPage'\n\nexport const SPEEDRUN_COM_URL = \"https://speedrun.com/api/v1\";\n\n\nconst App = () => {\n  return (\n    <Router>\n      <h1>\n        <Link to=\"/\">Speedrun PB Grapher</Link>\n      </h1>\n      <b>This site is still under construction</b>\n\n      <Switch>\n        <Route path=\"/user/:id\" exact>\n          <UserPage />\n        </Route>\n        <Route path=\"/graph/:userId/:categoryId\" exact>\n          <GraphPage />\n        </Route>\n        <Route path=\"/\" exact>\n          <HomePage/>\n        </Route>\n        <Route>404</Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}