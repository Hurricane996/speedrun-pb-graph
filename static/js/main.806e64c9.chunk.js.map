{"version":3,"sources":["GraphPage.tsx","HomePage.tsx","UserPage.tsx","App.tsx","index.tsx"],"names":["makeHumanReadable","input","ms","s","Math","floor","m","h","msString","toFixed","slice","sString","mString","hString","ret","console","log","chartOptions","scales","x","type","time","tooltipFormat","y","ticks","callback","value","plugins","tooltip","callbacks","label","context","parsed","GraphPage","useParams","userId","categoryId","useState","isLoading","setIsLoading","isError","setIsError","errorMessage","setErrorMessage","gameName","setGameName","categoryName","setCategoryName","username","setUsername","runs","setRuns","getData","a","Promise","all","axios","get","SPEEDRUN_COM_URL","categoryData","userData","runsData","data","game","names","international","name","filter","run","status","map","date","DateTime","fromFormat","times","primary_t","message","useEffect","chartData","labels","datasets","borderColor","to","Jumbotron","options","width","height","cancelToken","HomePage","searchValue","setSearchValue","searchValueIsLoading","setSearchValueIsLoading","results","setResults","getInfo","query","cancel","CancelToken","source","token","id","Form","Group","Label","Control","onChange","event","target","length","UserPage","setUserData","getUserData","userApiData","pbData","categories","category","gameId","error","App","Navbar","bg","Brand","style","textDecoration","color","Nav","Item","Container","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.806e64c9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\nimport { Line} from \"react-chartjs-2\";\n\nimport \"chartjs-adapter-luxon\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\n\ninterface Run {\n    date: Date;\n    time: number;\n}\n\nconst makeHumanReadable = (input: number): string => {\n    const ms = input % 1;\n    const s = Math.floor(input) % 60;\n    const m = Math.floor(input/60) % 60;\n    const h = Math.floor(input/3600);\n\n    const msString = ms === 0 ? \"\" : ms.toFixed(3).slice(1);\n\n    const sString = s < 10 ? `0${s}` : `${s}`;\n\n    const mString = m < 10 ? `0${m}` : `${m}`;\n    const hString = h === 0 ? \"\" : `${h}:`;\n\n    const ret = `${hString}${mString}:${sString}${msString}`;\n    console.log(ret);\n    return ret;\n};\n\nconst chartOptions = {\n    scales: {\n        x: {\n            type: \"time\",\n            time: {\n                tooltipFormat: \"DD\"\n            }\n        },\n        y: {\n            ticks: {\n                callback: (value: number) => makeHumanReadable(value)\n            }\n        }\n    },\n    plugins: {\n        tooltip: {\n            callbacks: {\n                label: (context: any) => makeHumanReadable(context.parsed.y)\n            }\n        }\n    }\n};\n\nconst GraphPage: FC = () => \n{\n    const {userId, categoryId} = useParams<{userId?: string, categoryId?: string}>();\n\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [isError, setIsError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const [gameName, setGameName] = useState<string>(\"\");\n    const [categoryName, setCategoryName] = useState<string>(\"\");\n    const [username, setUsername] = useState<string>(\"\");\n\n    const [runs, setRuns] = useState<Run[]>([]);\n\n    const getData = async () => {\n        try {\n            const [categoryData, userData, runsData] = await Promise.all([\n                axios.get(`${SPEEDRUN_COM_URL}/categories/${categoryId}?embed=game`),\n                axios.get(`${SPEEDRUN_COM_URL}/users/${userId}`),\n                axios.get(`${SPEEDRUN_COM_URL}/runs?user=${userId}&category=${categoryId}`)\n            ]);\n\n            console.log(runsData);\n            setGameName(categoryData.data.data.game.data.names.international);\n            setCategoryName(categoryData.data.data.name);\n\n            setUsername(userData.data.data.names.international);\n\n            setIsLoading(false);\n\n            setRuns(runsData.data.data\n                .filter((run: any) => run.status.status !== \"rejected\")\n                .map((run: any) => ({date: DateTime.fromFormat(run.date, \"yyyy-MM-dd\"), time: run.times.primary_t}))\n            );\n\n\n        } catch (e) {\n            setIsError(true);\n            setErrorMessage(e.message);\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {getData();}, []);\n    \n    if(isError) return(<p>Encountered error &quot;{errorMessage}&quot;</p>);\n    if(isLoading) return (<p>Loading...</p>);\n\n    const chartData = {\n        labels: runs.map(run=>run.date),\n        datasets: [{\n            label: \"Time\",\n            data: runs.map(run=>run.time),\n            borderColor: \"rgb(255,0,0)\",\n        }]\n    };\n\n\n    return (\n        <>\n            <h1>{gameName} : {categoryName} - {username}</h1>\n            <Link to={`/user/${userId}`} >Back to user</Link>\n            <Jumbotron>\n                <Line type='line' data={chartData} options={chartOptions} width={600} height={250} />\n            </Jumbotron>\n        </>\n    );\n};\nexport default GraphPage;","import axios, { CancelTokenSource } from \"axios\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { FC } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\nlet cancelToken: CancelTokenSource | null  = null;\n\ninterface User {\n    name: string,\n    id: string\n}\n\n\n\n\nconst HomePage: FC = () => {\n    const [searchValue, setSearchValue] = useState<string>(\"\");\n    const [searchValueIsLoading, setSearchValueIsLoading] = useState<boolean>(false);\n    const [results, setResults] = useState<User[]>([]);\n  \n    const getInfo = async (query: string) => {\n        if(cancelToken) {\n            cancelToken.cancel();\n        }\n        try {\n            cancelToken = axios.CancelToken.source();\n\n            const {data} = await axios.get(`${SPEEDRUN_COM_URL}/users?name=${query}`,{cancelToken: cancelToken.token});\n\n            console.log(data.data);\n\n            setResults(data.data.slice(0,5).map(\n                ({id, names}: any) => ({\n                    id, \n                    name: names.international\n                })\n            ));\n\n            setSearchValueIsLoading(false);\n\n        } catch(error)  {\n            console.log(error);\n        }\n    };\n\n  \n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(event.target.value);\n        setSearchValueIsLoading(true);\n        if(event.target.value.length >= 1) {\n            getInfo(event.target.value);\n        }\n        else {\n            setResults([]);\n        }\n    };\n    return (\n        <>\n            <Form>\n                <Form.Group>\n                    <Form.Label>\n              Enter your speedrun.com username\n                    </Form.Label>\n                    <Form.Control type=\"search\" name=\"username\" onChange={handleInputChange} value={searchValue}/>\n                </Form.Group>\n                { !searchValueIsLoading && searchValue.length != 0 ? (\n                    <>\n                        <h3>Users:</h3>\n                        <ul>\n                            {results.length > 0 ? results.map(({id, name}) => (\n                                <li key={id}><Link to={`/user/${id}`}>{name} </Link></li>\n                            )) : (<p>No users found</p>)}\n                        </ul>\n                    </>\n                ) : searchValue.length != 0 ? (<p>Loading...</p>) : <></> }\n            </Form>\n        </>\n    );\n};\n\nexport default HomePage;","import axios from \"axios\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\ninterface Category {\n    gameName: string;\n    gameId: string;\n    categoryName: string;\n    categoryId: string;\n}\n\ninterface UserData {\n    id: string;\n    name: string;\n\n    categories: Category[]\n\n}\n\nconst UserPage: FC =  () => {\n    const {id} = useParams<{id?: string}>();\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [isError, setIsError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const [userData, setUserData] = useState<UserData | null>(null);\n\n\n    const getUserData = async () => {\n        try {\n \n\n            const [userApiData, pbData] = await Promise.all([\n                axios.get(`${SPEEDRUN_COM_URL}/users/${id}`),\n                axios.get(`${SPEEDRUN_COM_URL}/users/${id}/personal-bests?embed=game,category`)\n            ]);\n\n            setIsLoading(false);\n\n            console.log(pbData.data.data);\n\n            setUserData({\n                id: userApiData.data.data.id,\n                name: userApiData.data.data.names.international,\n                categories: pbData.data.data.map(({game, category}: any) => ({\n                    gameName: game.data.names.international,\n                    gameId: game.data.id,\n                    categoryName: category.data.name,\n                    categoryId: category.data.id\n                }))\n            });\n\n\n        } catch (error) {\n            setIsError(true);\n            setErrorMessage(error.message);\n            console.error(error);\n        }\n    };\n\n    useEffect(()=>{getUserData();},[]);\n\n    if(isError) return (<p>Error {errorMessage} occured.</p>);\n    if(isLoading) return (<p>Loading...</p>);\n\n    console.log(userData);\n\n    return (<>\n        <h2>{userData?.name}</h2>\n        <ul>\n            {userData?.categories.map((category: Category) => (\n                <li key={category.categoryId}><Link to={`/graph/${userData?.id}/${category.categoryId}`}>{category.gameName}: {category.categoryName}</Link></li>\n            ))}\n        </ul>\n    </>);\n\n};\n\nexport default UserPage;","import React, { FC } from \"react\";\n\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport GraphPage from \"./GraphPage\";\n\nimport HomePage from \"./HomePage\";\nimport UserPage from \"./UserPage\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nexport const SPEEDRUN_COM_URL = \"https://speedrun.com/api/v1\";\n\n\nconst App : FC = ()  => {\n    return (\n        <Router>\n            <Navbar bg=\"dark\">\n                <Navbar.Brand><Link to=\"/\" style={{textDecoration: \"none\"}}><h4 style={{color: \"white\"}}>Speedrun PB Grapher</h4></Link></Navbar.Brand>\n                <Nav.Item><Link to=\"/\" style={{color:\"white\", textDecoration:\"none\"}}>Home</Link></Nav.Item>\n            </Navbar>\n            <Container>\n                <Switch>\n                    <Route path=\"/user/:id\" exact>\n                        <UserPage />\n                    </Route>\n                    <Route path=\"/graph/:userId/:categoryId\" exact>\n                        <GraphPage />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <HomePage/>\n                    </Route>\n                    <Route>404</Route>\n                </Switch>\n            </Container>\n        </Router>\n    );\n};\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}