{"version":3,"sources":["GraphPage.tsx","HomePage.tsx","UserPage.tsx","App.tsx","index.tsx"],"names":["makeHumanReadable","input","ms","s","Math","floor","m","h","msString","toFixed","slice","sString","mString","hString","GraphPage","useParams","userId","categoryId","theChart","useRef","useState","isLoading","setIsLoading","isError","setIsError","errorMessage","setErrorMessage","gameName","setGameName","categoryName","setCategoryName","username","setUsername","runs","setRuns","getData","a","Promise","all","axios","jsonp","SPEEDRUN_COM_URL","categoryData","userData","runsData","console","log","data","game","names","international","name","filter","run","status","map","date","DateTime","fromFormat","zone","time","times","primary_t","id","sort","first","second","message","useEffect","chartData","labels","datasets","label","borderColor","chartOptions","onClick","activeEl","current","getActiveElements","length","index","window","location","href","responsive","scales","x","type","tooltipFormat","y","ticks","callback","value","plugins","tooltip","callbacks","context","parsed","to","Jumbotron","ref","options","cancelToken","HomePage","searchValue","setSearchValue","searchValueIsLoading","setSearchValueIsLoading","results","setResults","getInfo","query","cancel","CancelToken","source","token","Form","Group","Label","Control","onChange","event","target","UserPage","setUserData","getUserData","userApiData","pbData","categories","category","gameId","error","App","Navbar","bg","Brand","style","textDecoration","color","Nav","Item","Container","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.039b465c.chunk.js","sourcesContent":["import axios from \"axios-jsonp-pro\";\nimport React, { FC, useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\nimport { Line} from \"react-chartjs-2\";\n\nimport \"chartjs-adapter-luxon\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\n\ninterface Run {\n    date: Date;\n    time: number;\n    id: string;\n}\n\nconst makeHumanReadable = (input: number): string => {\n    const ms = input % 1;\n    const s = Math.floor(input) % 60;\n    const m = Math.floor(input/60) % 60;\n    const h = Math.floor(input/3600);\n\n    const msString = ms === 0 ? \"\" : ms.toFixed(3).slice(1);\n\n    const sString = s < 10 ? `0${s}` : `${s}`;\n\n    const mString = m < 10 ? `0${m}` : `${m}`;\n    const hString = h === 0 ? \"\" : `${h}:`;\n\n    return `${hString}${mString}:${sString}${msString}`;\n};\n\n\n\nconst GraphPage: FC = () => \n{\n    const {userId, categoryId} = useParams<{userId?: string, categoryId?: string}>();\n    const theChart = useRef<typeof Line>(null);\n\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [isError, setIsError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const [gameName, setGameName] = useState<string>(\"\");\n    const [categoryName, setCategoryName] = useState<string>(\"\");\n    const [username, setUsername] = useState<string>(\"\");\n\n    const [runs, setRuns] = useState<Run[]>([]);\n\n    const getData = async () => {\n        try {\n            const [categoryData, userData, runsData] = await Promise.all([\n                axios.jsonp(`${SPEEDRUN_COM_URL}/categories/${categoryId}?embed=game&callback=callback`),\n                axios.jsonp(`${SPEEDRUN_COM_URL}/users/${userId}?callback=callback`),\n                axios.jsonp(`${SPEEDRUN_COM_URL}/runs?user=${userId}&category=${categoryId}&max=200&callback=callback`)\n            ]);\n\n            console.log(runsData);\n            setGameName(categoryData.data.game.data.names.international);\n            setCategoryName(categoryData.data.name);\n\n            setUsername(userData.data.names.international);\n\n            setIsLoading(false);\n\n            setRuns(runsData.data\n                .filter((run: any) => run.status.status !== \"rejected\")\n                .map((run: any) => ({\n                    date: DateTime.fromFormat(run.date, \"yyyy-MM-dd\", {zone: \"UTC\"}), \n                    time: run.times.primary_t,\n                    id: run.id\n                }))\n                .sort((first: Run, second: Run) => (\n                    first.date === second.date\n                        ? (first.time < second.time ? -1 : 1)\n                        : (first.date < second.date ? -1 : 1)               \n                ))\n            );\n\n\n        } catch (e) {\n            setIsError(true);\n            setErrorMessage(e.message);\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {getData();}, []);\n    \n    if(isError) return(<p>Encountered error &quot;{errorMessage}&quot;</p>);\n    if(isLoading) return (<p>Loading...</p>);\n\n    const chartData = {\n        labels: runs.map(run=>run.date),\n        datasets: [{\n            label: \"Time\",\n            data: runs.map(run=>run.time),\n            borderColor: \"rgb(255,0,0)\",\n        }]\n    };\n\n    const onChartClick = () => {\n        const activeEl = (theChart.current as any).getActiveElements();\n        if(activeEl.length > 0) {\n            const run = runs[activeEl[0].index];\n            window.location.href = `https://speedrun.com/run/${run.id}`;\n        }\n    };\n\n    const chartOptions = {\n        onClick: onChartClick,\n        responsive: true,\n        scales: {\n            x: {\n                type: \"time\",\n                time: {\n                    tooltipFormat: \"MMM d, yyyy\"\n                }\n            },\n            y: {\n                ticks: {\n                    callback: (value: number) => makeHumanReadable(value)\n                }\n            }\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label: (context: any) => makeHumanReadable(context.parsed.y)\n                }\n            }\n        }\n    };\n\n    return (\n        <>\n            <h1>{gameName} : {categoryName} - {username}</h1>\n            <Link to={`/user/${userId}`} >Back to user</Link>\n            <p><b> Click a data-point to see the associated run&apos;s speedrun.com page!</b></p>\n            <Jumbotron>\n                <Line ref={theChart} type='line' data={chartData} options={chartOptions} />\n            </Jumbotron>\n        </>\n    );\n};\nexport default GraphPage;","import axios, { CancelTokenSource } from \"axios-jsonp-pro\";\nimport React, { ChangeEvent, useState } from \"react\";\nimport { FC } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\nlet cancelToken: CancelTokenSource | null  = null;\n\ninterface User {\n    name: string,\n    id: string\n}\n\n\n\n\nconst HomePage: FC = () => {\n    const [searchValue, setSearchValue] = useState<string>(\"\");\n    const [searchValueIsLoading, setSearchValueIsLoading] = useState<boolean>(false);\n    const [results, setResults] = useState<User[]>([]);\n  \n    const getInfo = async (query: string) => {\n        if(cancelToken) {\n            cancelToken.cancel();\n        }\n        try {\n            cancelToken = axios.CancelToken.source();\n\n            const {data} = await axios.jsonp(`${SPEEDRUN_COM_URL}/users?name=${query}&callback=callback`,{cancelToken: cancelToken.token});\n\n            console.log(data);\n\n            setResults(data.slice(0,5).map(\n                ({id, names}: any) => ({\n                    id, \n                    name: names.international\n                })\n            ));\n\n            setSearchValueIsLoading(false);\n\n        } catch(error)  {\n            console.log(error);\n        }\n    };\n\n  \n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(event.target.value);\n        setSearchValueIsLoading(true);\n        if(event.target.value.length >= 1) {\n            getInfo(event.target.value);\n        }\n        else {\n            setResults([]);\n        }\n    };\n    return (\n        <>\n            <Form>\n                <Form.Group>\n                    <Form.Label>\n              Enter your speedrun.com username\n                    </Form.Label>\n                    <Form.Control type=\"search\" name=\"username\" onChange={handleInputChange} value={searchValue}/>\n                </Form.Group>\n                { !searchValueIsLoading && searchValue.length != 0 ? (\n                    <>\n                        <h3>Users:</h3>\n                        <ul>\n                            {results.length > 0 ? results.map(({id, name}) => (\n                                <li key={id}><Link to={`/user/${id}`}>{name} </Link></li>\n                            )) : (<p>No users found</p>)}\n                        </ul>\n                    </>\n                ) : searchValue.length != 0 ? (<p>Loading...</p>) : <></> }\n            </Form>\n        </>\n    );\n};\n\nexport default HomePage;","import axios from \"axios-jsonp-pro\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport { SPEEDRUN_COM_URL } from \"./App\";\n\ninterface Category {\n    gameName: string;\n    gameId: string;\n    categoryName: string;\n    categoryId: string;\n}\n\ninterface UserData {\n    id: string;\n    name: string;\n\n    categories: Category[]\n\n}\n\nconst UserPage: FC =  () => {\n    const {id} = useParams<{id?: string}>();\n\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [isError, setIsError] = useState<boolean>(false);\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n    const [userData, setUserData] = useState<UserData | null>(null);\n\n\n    const getUserData = async () => {\n        try {\n \n\n            const [userApiData, pbData] = await Promise.all([\n                axios.jsonp(`${SPEEDRUN_COM_URL}/users/${id}?callback=callback`),\n                axios.jsonp(`${SPEEDRUN_COM_URL}/users/${id}/personal-bests?embed=game,category&callback=callback`)\n            ]);\n\n            setIsLoading(false);\n\n            console.log(pbData.data);\n\n            setUserData({\n                id: userApiData.data.id,\n                name: userApiData.data.names.international,\n                categories: pbData.data\n                    .filter(({category} : any) => category.data.type === \"per-game\")\n                    .map(({game, category}: any) => ({\n                        gameName: game.data.names.international,\n                        gameId: game.data.id,\n                        categoryName: category.data.name,\n                        categoryId: category.data.id\n                    }))\n            });\n        } catch (error) {\n            setIsError(true);\n            setErrorMessage(error.message);\n            console.error(error);\n        }\n    };\n\n    useEffect(()=>{getUserData();},[]);\n\n    if(isError) return (<p>Error {errorMessage} occured.</p>);\n    if(isLoading) return (<p>Loading...</p>);\n\n    console.log(userData);\n\n    return (<>\n        <h2>{userData?.name}</h2>\n        <ul>\n            {userData?.categories.map((category: Category) => (\n                <li key={category.categoryId}><Link to={`/graph/${userData?.id}/${category.categoryId}`}>{category.gameName}: {category.categoryName}</Link></li>\n            ))}\n        </ul>\n    </>);\n\n};\n\nexport default UserPage;","import React, { FC } from \"react\";\n\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport GraphPage from \"./GraphPage\";\n\nimport HomePage from \"./HomePage\";\nimport UserPage from \"./UserPage\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nexport const SPEEDRUN_COM_URL = \"https://speedrun.com/api/v1\";\n\n\nconst App : FC = ()  => {\n    return (\n        <Router>\n            <Navbar bg=\"dark\">\n                <Navbar.Brand><Link to=\"/\" style={{textDecoration: \"none\"}}><h4 style={{color: \"white\"}}>Speedrun PB Grapher</h4></Link></Navbar.Brand>\n                <Nav.Item><Link to=\"/\" style={{color:\"white\", textDecoration:\"none\"}}>Home</Link></Nav.Item>\n            </Navbar>\n            <Container>\n                <Switch>\n                    <Route path=\"/user/:id\" exact>\n                        <UserPage />\n                    </Route>\n                    <Route path=\"/graph/:userId/:categoryId\" exact>\n                        <GraphPage />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <HomePage/>\n                    </Route>\n                    <Route>404</Route>\n                </Switch>\n            </Container>\n        </Router>\n    );\n};\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}