{"version":3,"sources":["components/Alerts.tsx","utils/makeTimeHumanReadable.ts","utils/CacheProvider.tsx","utils/useFetcher.ts","utils/insertIfExists.ts","pages/GraphPage.tsx","components/search.svg","components/SearchComponent.tsx","pages/HomePage.tsx","pages/UserPage.tsx","pages/SearchPage.tsx","githubLogo.svg","App.tsx","index.tsx","App.module.css","components/Alerts.module.css","components/SearchComponent.module.css","pages/GraphPage.module.css"],"names":["ErrorAlert","error","className","styles","alert","LoadingAlert","loading","input","ms","s","Math","floor","m","h","msString","toFixed","slice","sString","mString","hString","CacheContext","createContext","CacheProvider","children","useState","cache","setCache","Provider","value","isInCache","url","Object","keys","includes","getFromCache","addOrUpdateCache","data","newState","fetcher","forceReload","setData","setLoading","setError","useContext","fetchWrapper","a","cacheKey","replace","SPEEDRUN_COM_URL","fetchJsonp","timeout","dataRaw","json","fetchData","newData","console","message","useEffect","text","delim","putDelimiterBefore","userId","categoryId","levelId","searchParams","Promise","all","insertIfExists","entries","map","key","values","label","categoryData","userData","runsData","levelData","subcategoryArr","runs","filter","run","status","every","runKey","get","date","DateTime","fromFormat","zone","time","times","primary_t","id","sort","first","second","gameName","game","names","international","categoryName","name","subcategoryString","join","username","levelName","GraphPage","useParams","theChart","useRef","URLSearchParams","useLocation","search","useFetcher","chartData","labels","datasets","borderColor","chartOptions","onClick","current","activeElements","getActiveElements","length","index","window","location","href","responsive","scales","x","type","tooltipFormat","y","ticks","callback","makeTimeHumanReadable","plugins","tooltip","callbacks","tooltipItem","parsed","to","chartContainer","ref","options","SearchComponent","setSearch","history","useHistory","onSubmit","e","preventDefault","push","form","uniqueId","placeholder","onChange","target","searchInput","aria-label","searchButton","src","searchIcon","HomePage","loadVariables","variables","variableData","subcategoryKeyId","subcategoryValueId","subcategoryValueName","sortCategories","b","subcategories","userApiData","pbData","pbDataFullGame","pb","category","pbDataIL","gameId","categoryDataFullGame","level","categoryDataILs","gameIds","Set","games","fullGameCategories","levelCategories","subcategoryLinkString","subcategory","subcategoryTextString","UserPage","Fragment","JSON","stringify","query","offset","lookupData","searchData","exactMatch","results","user","hasNext","pagination","links","find","link","rel","SearchPage","strOffset","parseInt","max","App","navbar","navHeader","rightAligner","githubLogo","container","path","exact","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18849f5b.chunk.js","sourcesContent":["import React, {FC} from \"react\";\nimport styles from \"./Alerts.module.css\";\n\ninterface ErrorProps {\n    error: string;\n}\n\nexport const ErrorAlert : FC<ErrorProps> = ({error} : ErrorProps) => (\n    <div className={`${styles.alert} ${styles.error}`}>An error occured: {error}</div>\n);\n\nexport const LoadingAlert: FC = () => (\n    <div className={`${styles.alert} ${styles.loading}`}>Loading...</div>\n);","export default (input: number): string => {\n    const ms = input % 1;\n    const s = Math.floor(input) % 60;\n    const m = Math.floor(input / 60) % 60;\n    const h = Math.floor(input / 3600);\n\n    // the else of the ternary produces 0.xxx, so the slice(1) call produces .xxx\n    const msString = ms < .001 ? \"\" : ms.toFixed(3).slice(1);\n\n    const sString = s < 10 ? `0${s}` : `${s}`;\n\n    const mString = m < 10 ? `0${m}` : `${m}`;\n    const hString = h === 0 ? \"\" : `${h}:`;\n\n    return `${hString}${mString}:${sString}${msString}`;\n};\n","import React, { createContext, FC, ReactNode, useState } from \"react\";\n\nexport interface Cache {\n    isInCache: (url: string) => boolean;\n    getFromCache: <T>(url: string) => T;\n    addOrUpdateCache: <T>(url: string, data: T) => void;\n}\n\nexport const CacheContext = createContext<Cache|null>(null);\n\ninterface CacheProviderProps {\n    children?: ReactNode;\n}\n\nconst CacheProvider: FC<CacheProviderProps> = ({children} : CacheProviderProps) => {\n    const [cache, setCache] = useState< {[key: string]: unknown}>({});\n\n    const isInCache = (url: string): boolean => {\n        return Object.keys(cache).includes(url);\n    };\n\n    const getFromCache = <T,>(url: string): T => {\n        return cache[url] as T;\n    };\n\n    const addOrUpdateCache = <T,>(url: string, data: T): void => {\n        const newState = {...cache};\n        newState[url] = data;\n        setCache(newState);\n    };\n\n    return (<CacheContext.Provider value={{isInCache, getFromCache, addOrUpdateCache}}>\n        {children}\n    </CacheContext.Provider>);\n};\n\nexport default CacheProvider;\n\n","import fetchJsonp from \"fetch-jsonp\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { Cache, CacheContext } from \"./CacheProvider\";\n\nexport type FetchWrapper = <T>(url: string) => Promise<T>;\n\nexport type Fetcher<InType,OutType> = (input: InType, fetchWrapper: FetchWrapper) => Promise<OutType>;\n\nexport default <InType,OutType>(\n    fetcher: Fetcher<InType, OutType>, \n    input: InType, forceReload?: React.DependencyList\n) : [OutType|null, boolean, string|null] => {\n    const [data, setData] = useState<OutType|null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string|null>(null);\n\n    const cache = useContext<Cache|null>(CacheContext);\n\n    if(!cache) return [\n        null, \n        false, \n        \"calls to useFetcher() must be wrapped in a CacheProvider\"\n    ]; \n\n    const {isInCache, addOrUpdateCache, getFromCache} = cache;\n\n    const fetchWrapper =  async <T>(url: string): Promise<T> => {\n        const cacheKey = url.replace(SPEEDRUN_COM_URL,\"\");\n        if(isInCache(cacheKey)) {\n            // we dont have to worry about cache invalidation because the whole\n            // cache gets discarded on user refresh\n            return getFromCache<T>(cacheKey);\n        }\n\n        const dataRaw = await fetchJsonp(url, {timeout: 10000}); \n        const data = await dataRaw.json<T>();\n\n        addOrUpdateCache(cacheKey, data);\n\n        return data;\n    };\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const newData = await fetcher(input, fetchWrapper);\n            setData(newData);\n            setLoading(false);\n        } catch (e) {\n            console.error(e);\n            setError(e.message);\n        }\n    };\n\n    useEffect(() => {fetchData();}, forceReload ?? []);\n\n    return [data, loading, error];\n};\n","export default (text: string|undefined, delim: string, putDelimiterBefore?: boolean): string => \n    putDelimiterBefore\n        ? (text ? delim + text : \"\") \n        : (text ? text + delim : \"\");\n","import React, { FC, useRef } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { Line} from \"react-chartjs-2\";\nimport \"chartjs-adapter-luxon\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport { EmbedGame, SRCCategory, SRCLevel, SRCResult, SRCRun, SRCUser, SRCVariable } from \"../types/SRCQueryResults\";\nimport {Chart, ChartOptions, TooltipItem} from \"chart.js\";\nimport makeTimeHumanReadable from \"../utils/makeTimeHumanReadable\";\nimport useFetcher, { Fetcher } from \"../utils/useFetcher\";\nimport insertIfExists from \"../utils/insertIfExists\";\nimport styles from \"./GraphPage.module.css\";\n\ninterface FetchedData {\n    gameName: string;\n    categoryName: string;\n    levelName: string;\n    subcategoryString: string;\n    username: string;\n    runs: {\n        date: DateTime;\n        time: number;\n        id: string;\n    }[];\n}\n\ninterface FetcherInput {\n    userId: string;\n    categoryId: string;\n    levelId?: string;\n    searchParams: URLSearchParams;\n}\n\nconst fetcher: Fetcher<FetcherInput,FetchedData> = async ({userId, categoryId, levelId, searchParams}, fetchWrapper) => {\n    const [categoryData, userData, runsData, levelData, subcategoryArr] = await Promise.all([\n        fetchWrapper<SRCResult<SRCCategory & EmbedGame>>(`${SPEEDRUN_COM_URL}/categories/${categoryId}?embed=game`),\n        fetchWrapper<SRCResult<SRCUser>>(`${SPEEDRUN_COM_URL}/users/${userId}`),\n        fetchWrapper<SRCResult<SRCRun[]>>(`${SPEEDRUN_COM_URL}/runs?user=${userId}${insertIfExists(levelId, \"&level=\", true)}&category=${categoryId}&max=200`),\n        levelId ? fetchWrapper<SRCResult<SRCLevel>>(`${SPEEDRUN_COM_URL}/levels/${levelId}`) : null,\n\n        // load all of the subcategories\n        Promise.all([...searchParams.entries()].map(async ([key,value]: [string,string]) : Promise<string> => {\n            const data = await fetchWrapper<SRCResult<SRCVariable>>(`${SPEEDRUN_COM_URL}/variables/${key}`);\n    \n            return data.data.values.values[value as string].label;\n        }))\n    ]);\n    \n    const runs = runsData.data\n        .filter(run=> run.status.status !== \"rejected\")\n        // only accept runs of the suggested subcategory\n        .filter(run=> Object.entries(run.values).every(([runKey, runValue] :[string, string]) => runValue as string === searchParams.get(runKey)))\n        .map(run => ({\n            date: DateTime.fromFormat(run.date, \"yyyy-MM-dd\", {zone: \"UTC\"}), \n            time: run.times.primary_t,\n            id: run.id\n        }))\n        // sort the runs, otherwise it will play connect the dots\n        .sort((first, second) => (\n            first.date === second.date\n                ? (first.time < second.time ? -1 : 1)\n                : (first.date < second.date ? -1 : 1)               \n        ));\n\n    return {\n        gameName: categoryData.data.game.data.names.international,\n        categoryName: categoryData.data.name,\n        subcategoryString: subcategoryArr.join(\", \"),\n        username: userData.data.names.international,\n        levelName: levelData ? levelData.data.name : \"\", \n        runs\n    };\n};\n\nconst GraphPage: FC = () => {\n    const {userId, categoryId, levelId} = useParams<{userId?: string; categoryId?: string; levelId?: string}>();\n\n    const theChart = useRef<Chart| null>(null);\n\n    const searchParams = new URLSearchParams(useLocation().search);\n\n    if(!userId)\n        return <ErrorAlert error=\"No user id provided!\"/>;\n    if(!categoryId)\n        return <ErrorAlert error=\"No category id provided!\"/>;\n        \n    const [data, loading, error] = useFetcher(fetcher, {userId, categoryId, levelId, searchParams});\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    const chartData = {\n        labels: data?.runs.map(run=>run.date),\n        datasets: [{\n            label: \"Time\",\n            data: data?.runs.map(run=>run.time),\n            borderColor: \"rgb(255,0,0)\",\n        }]\n    };\n\n    const onChartClick = () => {\n        // somehow the user clicked on the chart before the ref was set... shouldn't be possible\n        if(!theChart.current) return;\n        const activeElements = theChart.current.getActiveElements();\n        if(activeElements.length > 0) {\n            const run = data?.runs[activeElements[0].index];\n            window.location.href = `https://speedrun.com/run/${run?.id}`;\n        }\n    };\n\n    const chartOptions: ChartOptions = {\n        onClick: onChartClick,\n        responsive: true,\n        scales: {\n            x: {\n                type: \"time\",\n                time: {\n                    tooltipFormat: \"MMM d, yyyy\"\n                }\n            },\n            y: {\n                ticks: {\n                    // if this isn't a number we're *really* fucked\n                    callback: (value: number| string) => makeTimeHumanReadable(value as number)\n                }\n            }\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label: (tooltipItem: TooltipItem<\"line\">) => makeTimeHumanReadable(tooltipItem.parsed.y)\n                }\n            }\n        }\n    };\n\n    return (\n        <>\n            <h1>{data?.gameName}: {insertIfExists(data?.levelName,\" \")}{data?.categoryName} - {insertIfExists(data?.subcategoryString, \" - \")}{data?.username}</h1>\n            <Link to={`/user/${userId}`} >Back to user</Link>\n            <p><b> Click a data-point to see the associated run&apos;s speedrun.com page!</b></p>\n            <div className={styles.chartContainer}>\n                <Line ref={theChart} type='line' data={chartData} options={chartOptions} />\n            </div>\n        </>\n    );\n};\n\nexport default GraphPage;","export default __webpack_public_path__ + \"static/media/search.43904a2f.svg\";","import { uniqueId } from \"lodash\";\nimport React, { useState, ChangeEvent, FormEvent, FC } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styles from \"./SearchComponent.module.css\";\n\nimport searchIcon from \"./search.svg\";\n\nconst SearchComponent: FC = () => {\n    const [search, setSearch] = useState<string>(\"\");\n    const history = useHistory();\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setSearch(e.target.value);\n    };\n\n    const submit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        history.push(`/search/${search}`);\n    };\n    return (    \n        <form onSubmit={submit} className={styles.form}>\n            <input \n                type=\"search\"\n                name=\"username\"\n                id={uniqueId(\"search-field-\")}\n                placeholder=\"speedrun.com username\"\n                value={search} \n                onChange={handleChange}\n                className={styles.searchInput}\n            />\n            <button type=\"submit\" aria-label=\"search\" className={styles.searchButton}><img src={searchIcon} className={styles.searchIcon}/></button>\n        </form>\n    );\n};\n\nexport default SearchComponent;","import React, {  FC  } from \"react\";\n\nimport SearchComponent from \"../components/SearchComponent\";\n\nconst HomePage: FC = () => {\n    return (\n        <>\n            <h1> Welcome to the Speedrun PB Grapher</h1>\n            <p> Enter your username to get started!</p>\n            <SearchComponent />\n        </>\n    );\n};\n\nexport default HomePage;","import React, {  FC } from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { SRCResult, SRCUser, EmbedGame, EmbedCategory, EmbedLevel, SRCPB, SRCVariableSet, SRCVariable } from \"../types/SRCQueryResults\";\nimport useFetcher, { Fetcher, FetchWrapper } from \"../utils/useFetcher\";\n\ninterface Game {\n    name: string;\n    id: string;\n    fullGameCategories: Category[];\n    levelCategories: LevelCategory[];\n}\n\ninterface Category {\n    gameName: string;\n    gameId: string;\n    categoryName: string;\n    categoryId: string;\n    subcategories: Subcategory[];\n}\n\ninterface LevelCategory extends Category {\n    levelId: string;\n    levelName: string;\n}\n\ninterface UserData {\n    id: string;\n    name: string;\n    games: Game[];\n}\n\nexport interface Subcategory {\n    subcategoryKeyId: string;\n    subcategoryValueId: string;\n    subcategoryValueName: string;\n}\n\nconst loadVariables = async (variables: SRCVariableSet, fetchWrapper: FetchWrapper): Promise<Subcategory[]> =>  \n    await Promise.all(Object.entries(variables).map(async ([key, value]: [string, string]) => {\n        const variableData = await fetchWrapper<SRCResult<SRCVariable>>(`${SPEEDRUN_COM_URL}/variables/${key}`);\n\n        return {\n            subcategoryKeyId: key,\n            subcategoryValueId: value,\n            subcategoryValueName: variableData.data.values.values[value].label\n        };\n    }));\n\nconst sortCategories = (a: Category|LevelCategory, b: Category|LevelCategory) => {\n    if(a.categoryName < b.categoryName) return -1;\n    if(a.categoryName > b.categoryName) return 1;\n    if(a.subcategories.length === 0 || b.subcategories.length === 0) return 0;\n    if(a.subcategories[0].subcategoryValueName < b.subcategories[0].subcategoryValueName) return -1;\n    if(a.subcategories[0].subcategoryValueName > b.subcategories[0].subcategoryValueName) return 1;\n    if(\"levelName\" in a && \"levelName\" in b) {\n        if(a.levelName < b.levelName) return - 1;\n        if(a.levelName > b.levelName) return 1;\n    }\n    return 0;\n};\n\n\n\nconst fetcher: Fetcher<{id: string},UserData> = async ({id}, fetchWrapper) => {\n    const [userApiData, pbData] = await Promise.all([\n        fetchWrapper<SRCResult<SRCUser>>(`${SPEEDRUN_COM_URL}/users/${id}`),\n        fetchWrapper<SRCResult<(SRCPB & EmbedGame & EmbedCategory & EmbedLevel)[]>>(`${SPEEDRUN_COM_URL}/users/${id}/personal-bests?embed=game,category,level`)\n    ]);\n\n    const pbDataFullGame = pbData.data.filter(pb => pb.category.data.type === \"per-game\");\n    const pbDataIL =  pbData.data.filter(pb => pb.category.data.type === \"per-level\");\n\n    const categoryDataFullGame: Category[] = (await Promise.all(pbDataFullGame.map(async pb => ({\n        gameName: pb.game.data.names.international,\n        gameId:  pb.game.data.id,\n        categoryName: pb.category.data.name,\n        categoryId: pb.category.data.id,\n\n        subcategories: await loadVariables(pb.run.values, fetchWrapper)\n    }))));\n\n    const categoryDataILs: LevelCategory[] = (await Promise.all((pbDataIL.map(async pb => ({\n        gameName: pb.game.data.names.international,\n        gameId:  pb.game.data.id,\n        categoryName: pb.category.data.name,\n        categoryId: pb.category.data.id,\n        levelId: pb.level.data.id,\n        levelName: pb.level.data.name,\n\n        subcategories: await loadVariables(pb.run.values, fetchWrapper)        \n    })))));\n\n    const gameIds: string[] = [...new Set<string>(pbData.data.map(pb => pb.game.data.id))];\n\n    const games: Game[] = gameIds.map(id => {\n        const fullGameCategories = categoryDataFullGame\n            .filter(category => category.gameId === id)\n            .sort(sortCategories);\n\n\n        const levelCategories = categoryDataILs\n            .filter(category => category.gameId === id)\n            .sort(sortCategories);\n        return {\n            id,\n            name: fullGameCategories.length > 0 ? fullGameCategories[0].gameName : levelCategories[0].gameName,\n            fullGameCategories,\n            levelCategories,\n        };\n    });\n\n    return {\n        id: userApiData.data.id,\n        name: userApiData.data.names.international,\n        games: games\n    };\n};\n\nconst subcategoryLinkString = (subcategories: Subcategory[]): string => subcategories.length\n    ? \"?\" + subcategories.map((subcategory) => `${subcategory.subcategoryKeyId}=${subcategory.subcategoryValueId}`).join(\"&\")\n    : \"\";\n\nconst subcategoryTextString = (subcategories: Subcategory[]): string => subcategories.length\n    ? \" - \" + subcategories.map((subcategory) => subcategory.subcategoryValueName).join(\", \")\n    : \"\";\n\nconst UserPage: FC =  () => {\n    const {id} = useParams<{id: string}>();\n\n    const [data, loading, error] = useFetcher(fetcher,{id});\n\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    return (\n        <>\n            <h1>Categories for {data?.name}</h1>\n            {data && data.games.length > 0 ? data.games.map((game: Game) => (\n                <React.Fragment key={game.id}>\n                    <h2> {game.name} </h2>\n                    {game.fullGameCategories.length > 0 && \n                        <>\n                            <h3>Full game runs:</h3>\n                            <ul>\n                                {game.fullGameCategories.map((category) => (\n                                    <li key={JSON.stringify(category)}>\n                                        <Link to={`/graph/${data.id}/${category.categoryId}${subcategoryLinkString(category.subcategories)}`}>\n                                            {category.categoryName}{subcategoryTextString(category.subcategories)}\n                                        </Link>\n                                    </li>                \n                                ))}         \n                            </ul>\n                        </>\n                    }\n                    {game.levelCategories.length > 0 && \n                        <>\n                            <h3>IL runs:</h3>\n                            <ul>\n                                {game.levelCategories.map((category) => (\n                                    <li key={JSON.stringify(category)}>\n                                        <Link to={`/graph/il/${data.id}/${category.levelId}/${category.categoryId}?${subcategoryLinkString(category.subcategories)}`}>\n                                            {category.levelName} {category.categoryName}{subcategoryTextString(category.subcategories)}\n                                        </Link>\n                                    </li>     \n                                ))}\n                            </ul>\n                        </>\n                    }\n                </React.Fragment>\n            )) : (<p>This user hasn&apos;t submitted any runs</p>)}\n        </>\n    );\n};\n\nexport default UserPage;","import React, { FC } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport {SPEEDRUN_COM_URL} from \"../App\";\nimport { SRCPaginatedResult, SRCResult, SRCUser } from \"../types/SRCQueryResults\";\nimport useFetcher, {Fetcher} from \"../utils/useFetcher\";\n\ninterface Result {\n    id: string;\n    name: string;\n}\n\ninterface Results {\n    exactMatch: Result | null;\n    results: Result[];\n    hasNext: boolean;\n}\n\nconst fetcher: Fetcher <{query: string; offset: number}, Results> = async ({query, offset}, fetchWrapper) => {\n    const [lookupData, searchData] = await Promise.all([\n        fetchWrapper<SRCResult<SRCUser[]>>(`${SPEEDRUN_COM_URL}/users?lookup=${query}`),\n        fetchWrapper<SRCPaginatedResult<SRCUser[]>>(`${SPEEDRUN_COM_URL}/users?name=${query}&offset=${offset}`)\n    ]);\n\n    return {\n        exactMatch: lookupData.data.length > 0 ? {\n            id: lookupData.data[0].id,\n            name: lookupData.data[0].names.international\n        } : null,\n        results: searchData.data.map(user => ({id: user.id, name: user.names.international})),\n        hasNext: !!searchData.pagination.links.find(link => link.rel == \"next\")\n    };\n};\n\nconst SearchPage: FC = () => {\n    const {query } = useParams<{query: string}>();\n    const searchParams = new URLSearchParams(useLocation().search);\n\n    const strOffset = searchParams.get(\"offset\");\n    const offset = strOffset ? parseInt(strOffset) : 0;\n\n    const [data, loading, error] = useFetcher(fetcher, {query, offset},[query,offset]);\n\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    return (\n        <>\n            <h2>Results for {query}:</h2>\n            {data?.exactMatch && <p><b>An exact match was found: <Link to={`/user/${data.exactMatch.id}`}>{data.exactMatch.name} </Link></b></p> }\n            {data?.results && data.results.length > 0 \n                ?\n                <ul>\n                    {data.results.map(({id, name}) => (\n                        <li key={id}><Link to={`/user/${id}`}>{name} </Link></li>\n                    ))}\n                </ul> \n                : <p>No users found. <Link to=\"/\">Search again?</Link></p>}\n\n            {offset > 0 && (<Link to={`/search/${query}?offset=${Math.max(0, offset - 20)}`}>&lt;Prev</Link>)}\n            {offset > 0 && data?.hasNext && \" - \"}\n            {data?.hasNext && (<Link to={`/search/${query}?offset=${offset + 20}`}>Next &gt;</Link>)}\n        </>\n    );\n};\n\nexport default SearchPage;","export default __webpack_public_path__ + \"static/media/githubLogo.3359e022.svg\";","import React, { FC } from \"react\";\nimport { HashRouter as Router, NavLink, Route, Switch } from \"react-router-dom\";\nimport GraphPage from \"./pages/GraphPage\";\nimport HomePage from \"./pages/HomePage\";\nimport UserPage from \"./pages/UserPage\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport CacheProvider from \"./utils/CacheProvider\";\nimport styles from \"./App.module.css\";\n\nimport githubLogo from \"./githubLogo.svg\";\n\nexport const SPEEDRUN_COM_URL = \"https://speedrun.com/api/v1\";\n\nconst App : FC = ()  => {\n    return (\n        <Router>\n            <CacheProvider>\n                <div className={styles.navbar}>\n                    <div>\n                        <NavLink to=\"/\" className={styles.navHeader}>Speedrun PB Grapher</NavLink>\n                    </div>\n                    <span className={styles.rightAligner}>\n                        <SearchComponent/>\n                    </span>\n                    <a aria-label=\"Project Github\" href=\"https://github.com/Hurricane996/speedrun-pb-graph\"><img src={githubLogo} className={styles.githubLogo}/></a>\n                </div>\n                <div className={styles.container}>\n                    <Switch>\n                        <Route path=\"/user/:id\" exact>\n                            <UserPage />\n                        </Route>\n                        <Route path=\"/graph/il/:userId/:levelId/:categoryId\" exact>\n                            <GraphPage/>\n                        </Route>\n                        <Route path=\"/graph/:userId/:categoryId\" exact>\n                            <GraphPage/>\n                        </Route>\n                        <Route path=\"/search/:query\" exact>\n                            <SearchPage />\n                        </Route>\n                        <Route path=\"/\" exact>\n                            <HomePage/>\n                        </Route>\n                        <Route>404</Route>\n                    </Switch>\n                </div>\n            </CacheProvider>\n        </Router>\n    );\n};\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"navbar\":\"App_navbar__3gDlA\",\"githubLogo\":\"App_githubLogo__QiF9o\",\"navHeader\":\"App_navHeader__3dfmH\",\"rightAligner\":\"App_rightAligner__2j8kQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alerts_alert__M7JDU\",\"error\":\"Alerts_error__3Q1Kj\",\"loading\":\"Alerts_loading__3ZTON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchComponent_form__nyAGw\",\"searchInput\":\"SearchComponent_searchInput__3mkng\",\"searchButton\":\"SearchComponent_searchButton__3vePQ\",\"searchIcon\":\"SearchComponent_searchIcon__uesRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartContainer\":\"GraphPage_chartContainer__3hmoX\"};"],"sourceRoot":""}