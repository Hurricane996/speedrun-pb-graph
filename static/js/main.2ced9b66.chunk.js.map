{"version":3,"sources":["components/Alerts.tsx","utils/makeTimeHumanReadable.ts","utils/CacheProvider.tsx","utils/useFetcher.ts","utils/insertIfExists.ts","pages/GraphPage.tsx","components/SearchComponent.tsx","pages/HomePage.tsx","utils/loadVariables.tsx","pages/UserPage.tsx","pages/SearchPage.tsx","App.tsx","index.tsx"],"names":["ErrorAlert","error","Alert","variant","LoadingAlert","input","ms","s","Math","floor","m","h","msString","toFixed","slice","sString","mString","hString","CacheContext","createContext","CacheProvider","children","useState","cache","setCache","Provider","value","isInCache","url","Object","keys","includes","getFromCache","addOrUpdateCache","data","newState","fetcher","forceReload","setData","loading","setLoading","setError","useContext","fetchWrapper","a","cacheKey","replace","SPEEDRUN_COM_URL","Promise","resolve","fetchJsonp","timeout","dataRaw","json","useEffect","newData","console","message","text","delim","putDelimiterBefore","userId","categoryId","levelId","searchParams","Error","all","insertIfExists","entries","map","key","values","label","categoryData","userData","runsData","levelData","subcategoryArr","runs","filter","run","status","every","runKey","get","date","DateTime","fromFormat","zone","time","times","primary_t","id","sort","first","second","gameName","game","names","international","categoryName","name","subcategoryString","join","username","levelName","GraphPage","useParams","theChart","useRef","URLSearchParams","useLocation","search","useFetcher","chartData","labels","datasets","borderColor","chartOptions","onClick","current","activeElements","getActiveElements","length","index","window","location","href","responsive","scales","x","type","tooltipFormat","y","ticks","callback","makeTimeHumanReadable","plugins","tooltip","callbacks","tooltipItem","parsed","to","Jumbotron","ref","options","SearchComponent","setSearch","history","useHistory","Form","inline","onSubmit","e","preventDefault","push","InputGroup","Control","uniqueId","placeholder","onChange","target","Button","aria-label","HomePage","variables","variableData","subcategoryKeyId","subcategoryValueId","subcategoryValueName","userApiData","pbData","pbDataGrouped","groupBy","pb","category","pbDataFullGame","pbDataIL","loadVariables","gameId","subcategories","categoryDataFullGame","level","categoryDataILs","gameIds","Set","games","fullGameCategories","b","levelCategories","subcategoryLinkString","subcategory","subcategoryTextString","UserPage","Fragment","JSON","stringify","query","offset","lookupData","searchData","exactMatch","results","user","hasNext","undefined","pagination","links","find","link","rel","SearchPage","strOffset","parseInt","max","App","Navbar","bg","expand","className","style","justifyContent","paddingLeft","paddingRight","Nav","Brand","color","Link","Container","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ced9b66.chunk.js","sourcesContent":["import React, {FC} from \"react\";\nimport Alert from \"react-bootstrap/esm/Alert\";\n\ninterface ErrorProps {\n    error: string;\n}\n\nexport const ErrorAlert : FC<ErrorProps> = ({error} : ErrorProps) => (\n    <Alert variant=\"danger\">An error occured: {error}</Alert>\n);\n\nexport const LoadingAlert: FC = () => (\n    <Alert variant=\"info\">Loading...</Alert>\n);","export default (input: number): string => {\n    const ms = input % 1;\n    const s = Math.floor(input) % 60;\n    const m = Math.floor(input / 60) % 60;\n    const h = Math.floor(input / 3600);\n\n    const msString = ms === 0 ? \"\" : ms.toFixed(3).slice(1);\n\n    const sString = s < 10 ? `0${s}` : `${s}`;\n\n    const mString = m < 10 ? `0${m}` : `${m}`;\n    const hString = h === 0 ? \"\" : `${h}:`;\n\n    return `${hString}${mString}:${sString}${msString}`;\n};\n","import React, { createContext, FC, ReactNode, useState } from \"react\";\n\n\nexport interface Cache {\n    isInCache: (url: string) => boolean;\n    getFromCache: <T,>(url: string) => T;\n    addOrUpdateCache: <T,>(url: string, data: T) => void;\n    cache:  {[key: string]: unknown};\n}\n\nexport const CacheContext = createContext<Cache|null>(null);\n\n\ntype CacheProviderProps = {\n    children: ReactNode;\n}\nconst CacheProvider: FC<CacheProviderProps> = ({children}: CacheProviderProps) => {\n    const [cache, setCache] = useState< {[key: string]: unknown}>({});\n\n\n    const isInCache = (url: string): boolean => {\n        return Object.keys(cache).includes(url);\n    };\n\n    const getFromCache = <T,>(url: string): T => {\n        return cache[url] as T;\n    };\n\n    const addOrUpdateCache = <T,>(url: string, data: T): void => {\n        const newState = {...cache};\n        newState[url] = data;\n        setCache(newState);\n    };\n\n    return (<CacheContext.Provider value={{isInCache, getFromCache, addOrUpdateCache, cache}}>\n        {children}\n    </CacheContext.Provider>);\n};\n\nexport default CacheProvider;\n\n","import fetchJsonp from \"fetch-jsonp\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { Cache, CacheContext } from \"./CacheProvider\";\n\nexport type FetchWrapper = <T>(url: string) => Promise<T>;\n\nexport type Fetcher<InType,OutType> = (input: InType, fetchWrapper: FetchWrapper) => Promise<OutType>;\n\nexport default <InType,OutType>(fetcher: Fetcher<InType, OutType>, input: InType, forceReload?: unknown[]) : [OutType|null, boolean, string|null] => {\n    const [data, setData] = useState<OutType|null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string|null>(null);\n\n    const cache = useContext<Cache|null>(CacheContext);\n\n    if(!cache) return [null, false, \"tell the dipshit who made this they need to use a fucking cache provider\"];\n\n    const {isInCache, addOrUpdateCache, getFromCache} = cache;\n\n    const fetchWrapper =  async <T>(url: string): Promise<T> => {\n        const cacheKey = url.replace(SPEEDRUN_COM_URL,\"\");\n        if(isInCache(cacheKey)) {\n            return Promise.resolve(getFromCache<T>(cacheKey));\n        }\n\n        const dataRaw = await fetchJsonp(url, {timeout: 10000}); \n        const data = await dataRaw.json<T>();\n\n        addOrUpdateCache(cacheKey, data);\n\n        return Promise.resolve(data);\n    };\n\n    useEffect(() => {(async () => {\n        setLoading(true);\n\n        try {\n            const newData = await fetcher(input, fetchWrapper);\n            setData(newData);\n            setLoading(false);\n        } catch (e) {\n            console.error(e);\n            setError(e.message);\n        }\n    })();},forceReload ?? []);\n\n    return [data, loading, error];\n};\n","export default (text: string|undefined, delim: string, putDelimiterBefore?: boolean): string => \n    putDelimiterBefore\n        ? (text ? delim + text : \"\") \n        : (text ? text + delim : \"\");\n","import React, { FC, useRef } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { Line} from \"react-chartjs-2\";\nimport \"chartjs-adapter-luxon\";\nimport { DateTime } from \"luxon\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"react-bootstrap\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport { SRCCategory_g, SRCLevel, SRCResult, SRCRun, SRCUser, SRCVariable } from \"../types/SRCQueryResults\";\nimport Chart from \"chart.js\";\nimport makeTimeHumanReadable from \"../utils/makeTimeHumanReadable\";\nimport useFetcher, { Fetcher } from \"../utils/useFetcher\";\nimport insertIfExists from \"../utils/insertIfExists\";\n\ninterface FetchedData {\n    gameName: string;\n    categoryName: string;\n    levelName: string;\n    subcategoryString: string;\n    username: string;\n    runs: {\n        date: DateTime;\n        time: number;\n        id: string;\n    }[];\n}\n\ninterface FetcherInput {\n    userId: string|undefined;\n    categoryId: string|undefined;\n    levelId: string|undefined;\n    searchParams: URLSearchParams;\n}\n\nconst fetcher: Fetcher<FetcherInput,FetchedData> = async ({userId, categoryId, levelId, searchParams}, fetchWrapper) => {\n    if(!userId) throw new Error(\"No user id provided!\");\n    if(!categoryId) throw new Error(\"No user id provided!\");\n\n    const [categoryData, userData, runsData, levelData, subcategoryArr] = await Promise.all([\n        fetchWrapper<SRCResult<SRCCategory_g>>(`${SPEEDRUN_COM_URL}/categories/${categoryId}?embed=game`),\n        fetchWrapper<SRCResult<SRCUser>>(`${SPEEDRUN_COM_URL}/users/${userId}`),\n        fetchWrapper<SRCResult<SRCRun[]>>(`${SPEEDRUN_COM_URL}/runs?user=${userId}${insertIfExists(levelId, \"&level=\", true)}&category=${categoryId}&max=200`),\n        levelId ? fetchWrapper<SRCResult<SRCLevel>>(`${SPEEDRUN_COM_URL}/levels/${levelId}`) : Promise.resolve<null>(null),\n\n        // load all of the subcategories\n        Promise.all([...searchParams.entries()].map(async ([key,value]: [string,string]) : Promise<string> => {\n            const data = await fetchWrapper<SRCResult<SRCVariable>>(`${SPEEDRUN_COM_URL}/variables/${key}`);\n    \n            return data.data.values.values[value as string].label;\n        }))\n    ]);\n    \n    const runs = runsData.data\n        .filter(run=> run.status.status !== \"rejected\")\n        // only accept runs of the suggested subcategory\n        .filter(run=> Object.entries(run.values).every(([runKey, runValue] :[string, string]) => runValue as string === searchParams.get(runKey)))\n        .map(run => ({\n            date: DateTime.fromFormat(run.date, \"yyyy-MM-dd\", {zone: \"UTC\"}), \n            time: run.times.primary_t,\n            id: run.id\n        }))\n        // sort the runs, otherwise it will play connect the dots\n        .sort((first, second) => (\n            first.date === second.date\n                ? (first.time < second.time ? -1 : 1)\n                : (first.date < second.date ? -1 : 1)               \n        ));\n\n    return {\n        gameName: categoryData.data.game.data.names.international,\n        categoryName: categoryData.data.name,\n        subcategoryString: subcategoryArr.join(\", \"),\n        username: userData.data.names.international,\n        levelName: levelData ? levelData.data.name : \"\", \n        runs\n    };\n};\n\nconst GraphPage: FC = () => {\n    const {userId, categoryId, levelId} = useParams<{userId?: string; categoryId?: string; levelId?: string}>();\n\n    const theChart = useRef<Chart.Chart| null>(null);\n\n    const searchParams = new URLSearchParams(useLocation().search);\n\n    const [data, loading, error] = useFetcher(fetcher, {userId, categoryId, levelId, searchParams});\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    const chartData = {\n        labels: data?.runs.map(run=>run.date),\n        datasets: [{\n            label: \"Time\",\n            data: data?.runs.map(run=>run.time),\n            borderColor: \"rgb(255,0,0)\",\n        }]\n    };\n\n    const onChartClick = () => {\n        // somehow the user clicked on the chart before the ref was set... shouldn't be possible\n        if(!theChart.current) return;\n        const activeElements = theChart.current.getActiveElements();\n        if(activeElements.length > 0) {\n            const run = data?.runs[activeElements[0].index];\n            window.location.href = `https://speedrun.com/run/${run?.id}`;\n        }\n    };\n\n    const chartOptions: Chart.ChartOptions = {\n        onClick: onChartClick,\n        responsive: true,\n        scales: {\n            x: {\n                type: \"time\",\n                time: {\n                    tooltipFormat: \"MMM d, yyyy\"\n                }\n            },\n            y: {\n                ticks: {\n                    // if this isn't a number we're *really* fucked\n                    callback: (value: number| string) => makeTimeHumanReadable(value as number)\n                }\n            }\n        },\n        plugins: {\n            tooltip: {\n                callbacks: {\n                    label: (tooltipItem: Chart.TooltipItem<\"line\">) => makeTimeHumanReadable(tooltipItem.parsed.y)\n                }\n            }\n        }\n    };\n\n    return (\n        <>\n            <h1>{data?.gameName}: {insertIfExists(data?.levelName,\" \")}{data?.categoryName} - {insertIfExists(data?.subcategoryString, \" - \")}{data?.username}</h1>\n            <Link to={`/user/${userId}`} >Back to user</Link>\n            <p><b> Click a data-point to see the associated run&apos;s speedrun.com page!</b></p>\n            <Jumbotron>\n                <Line ref={theChart} type='line' data={chartData} options={chartOptions} />\n            </Jumbotron>\n        </>\n    );\n};\n\nexport default GraphPage;","import { uniqueId } from \"lodash\";\nimport React, { useState, ChangeEvent, FormEvent, FC } from \"react\";\nimport { Search } from \"react-bootstrap-icons\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { useHistory } from \"react-router\";\n\nconst SearchComponent: FC = () => {\n    const [search, setSearch] = useState<string>(\"\");\n    const history = useHistory();\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setSearch(e.target.value);\n    };\n\n    const submit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        history.push(`/search/${search}`);\n    };\n    return (    \n        <Form inline onSubmit={submit}>\n            <InputGroup>\n                <Form.Control type=\"search\"  name=\"username\" id={uniqueId(\"search-field-\")} placeholder=\"speedrun.com username\" value={search} onChange={handleChange}/>\n                <Button type=\"submit\" aria-label=\"search\"><Search/></Button>\n            </InputGroup>\n        </Form>\n    );\n};\n\nexport default SearchComponent;","import React, {  FC  } from \"react\";\n\nimport SearchComponent from \"../components/SearchComponent\";\n\nconst HomePage: FC = () => {\n    return (\n        <>\n            <h1> Welcome to the Speedrun PB Grapher</h1>\n            <p> Enter your username to get started!</p>\n            <SearchComponent />\n        </>\n    );\n};\n\nexport default HomePage;","import { SPEEDRUN_COM_URL } from \"../App\";\nimport { SRCResult, SRCVariableSet, SRCVariable } from \"../types/SRCQueryResults\";\nimport { Subcategory } from \"../pages/UserPage\";\nimport { FetchWrapper } from \"./useFetcher\";\n\nexport default async (variables: SRCVariableSet, fetchWrapper: FetchWrapper): Promise<Subcategory[]> => {\n    return await Promise.all(Object.entries(variables).map(async ([key, value]: [string, string]) => {\n        const variableData = await fetchWrapper<SRCResult<SRCVariable>>(`${SPEEDRUN_COM_URL}/variables/${key}`);\n\n        return {\n            subcategoryKeyId: key,\n            subcategoryValueId: value,\n            subcategoryValueName: variableData.data.values.values[value].label\n        };\n    }));\n};\n","import React, {  FC } from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport { SPEEDRUN_COM_URL } from \"../App\";\nimport { groupBy } from \"lodash\";\nimport { SRCResult, SRCUser, SRCPB_gcl } from \"../types/SRCQueryResults\";\nimport useFetcher, { Fetcher } from \"../utils/useFetcher\";\nimport loadVariables from \"../utils/loadVariables\";\n\ninterface Game {\n    name: string;\n    id: string;\n    fullGameCategories: Category[];\n    levelCategories: LevelCategory[];\n}\n\ninterface Category {\n    gameName: string;\n    gameId: string;\n    categoryName: string;\n    categoryId: string;\n    subcategories: Subcategory[];\n}\n\ninterface LevelCategory extends Category {\n    levelId: string;\n    levelName: string;\n}\n\nexport interface Subcategory {\n    subcategoryKeyId: string;\n    subcategoryValueId: string;\n    subcategoryValueName: string;\n}\n\ninterface UserData {\n    id: string;\n    name: string;\n    games: Game[];\n}\n\nconst fetcher: Fetcher<{id: string},UserData> = async ({id}, fetchWrapper) => {\n    const [userApiData, pbData] = await Promise.all([\n        fetchWrapper<SRCResult<SRCUser>>(`${SPEEDRUN_COM_URL}/users/${id}`),\n        fetchWrapper<SRCResult<SRCPB_gcl[]>>(`${SPEEDRUN_COM_URL}/users/${id}/personal-bests?embed=game,category,level`)\n    ]);\n\n    const pbDataGrouped  = groupBy(pbData.data, pb => pb.category.data.type);\n\n    const pbDataFullGame = pbDataGrouped[\"per-game\"] ?? [];\n    const pbDataIL = pbDataGrouped[\"per-level\"] ?? [];\n\n    const categoryDataFullGame: Category[] = (await Promise.all(pbDataFullGame.map(async pb => ({\n        gameName: pb.game.data.names.international,\n        gameId:  pb.game.data.id,\n        categoryName: pb.category.data.name,\n        categoryId: pb.category.data.id,\n\n        subcategories: await loadVariables(pb.run.values, fetchWrapper)\n    }))));\n\n    const categoryDataILs: LevelCategory[] = (await Promise.all((pbDataIL.map(async pb => ({\n        gameName: pb.game.data.names.international,\n        gameId:  pb.game.data.id,\n        categoryName: pb.category.data.name,\n        categoryId: pb.category.data.id,\n        levelId: pb.level.data.id,\n        levelName: pb.level.data.name,\n\n        subcategories: await loadVariables(pb.run.values, fetchWrapper)        \n    })))));\n\n    const gameIds: string[] = [...new Set<string>(pbData.data.map(pb => pb.game.data.id))];\n\n    const games: Game[] = gameIds.map(id => {\n        const fullGameCategories = categoryDataFullGame\n            .filter(category => category.gameId === id)\n            .sort((a: Category, b: Category) => {\n                if(a.categoryName < b.categoryName) return -1;\n                if(a.categoryName > b.categoryName) return 1;\n                if(a.subcategories.length === 0 || b.subcategories.length === 0) return 0;\n                if(a.subcategories[0].subcategoryValueName < b.subcategories[0].subcategoryValueName) return -1;\n                if(a.subcategories[0].subcategoryValueName > b.subcategories[0].subcategoryValueName) return 1;\n                return 0;\n            });\n\n\n        const levelCategories = categoryDataILs\n            .filter(category => category.gameId === id)\n            .sort((a: LevelCategory, b: LevelCategory) => {\n                if(a.levelName < b.levelName) return -1;\n                if(a.levelName > b.levelName) return 1;\n                if(a.categoryName < b.categoryName) return -1;\n                if(a.categoryName > b.categoryName) return 1;\n                if(a.subcategories.length === 0 || b.subcategories.length === 0) return 0;\n                if(a.subcategories[0].subcategoryValueName < b.subcategories[0].subcategoryValueName) return -1;\n                if(a.subcategories[0].subcategoryValueName > b.subcategories[0].subcategoryValueName) return 1;\n\n                return 0;\n            });\n\n        return {\n            id,\n            name: fullGameCategories.length > 0 ? fullGameCategories[0].gameName : levelCategories[0].gameName,\n            fullGameCategories,\n            levelCategories,\n        };\n    });\n\n    return {\n        id: userApiData.data.id,\n        name: userApiData.data.names.international,\n        games: games\n    };\n};\n\nconst subcategoryLinkString = (subcategories: Subcategory[]): string => subcategories.length\n    ? \"?\" + subcategories.map((subcategory) => `${subcategory.subcategoryKeyId}=${subcategory.subcategoryValueId}`).join(\"&\")\n    : \"\";\n\nconst subcategoryTextString = (subcategories: Subcategory[]): string => subcategories.length\n    ? \" - \"+subcategories.map((subcategory) => subcategory.subcategoryValueName).join(\", \")\n    : \"\";\n\nconst UserPage: FC =  () => {\n    const {id} = useParams<{id: string}>();\n\n    const [data, loading, error] = useFetcher(fetcher,{id});\n\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    return (\n        <>\n            <h1>Categories for {data?.name}</h1>\n            {data && data.games.length > 0 ? data.games.map((game: Game) => (\n                <React.Fragment key={game.id}>\n                    <h2> {game.name} </h2>\n                    {game.fullGameCategories.length > 0 ? <h3>Full game runs:</h3> : <></>}\n                    <ul>\n                        {game.fullGameCategories.map((category) => (\n                            <li key={JSON.stringify(category)}>\n                                <Link to={`/graph/${data.id}/${category.categoryId}${subcategoryLinkString(category.subcategories)}`}>\n                                    {category.categoryName}{subcategoryTextString(category.subcategories)}\n                                </Link>\n                            </li>                \n                        ))}         \n                    </ul>\n                    {game.levelCategories.length > 0 ? <h3>IL runs:</h3> : <></>}\n                    <ul>\n                        {game.levelCategories.map((category) => (\n                            <li key={JSON.stringify(category)}>\n                                <Link to={`/graph/il/${data.id}/${category.levelId}/${category.categoryId}?${subcategoryLinkString(category.subcategories)}`}>\n                                    {category.levelName} {category.categoryName}{subcategoryTextString(category.subcategories)}\n                                </Link>\n                            </li>     \n                        ))}\n                    </ul>\n                </React.Fragment>\n            )) : (<p>This user hasn&apos;t submitted any runs</p>)}\n        </>\n    );\n};\n\nexport default UserPage;","import React, { FC } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { ErrorAlert, LoadingAlert } from \"../components/Alerts\";\nimport {SPEEDRUN_COM_URL} from \"../App\";\nimport { SRCPaginatedResult, SRCResult, SRCUser } from \"../types/SRCQueryResults\";\n\nimport useFetcher, {Fetcher} from \"../utils/useFetcher\";\n\ninterface Result {\n    id: string;\n    name: string;\n}\n\ninterface Results {\n    exactMatch: Result | null;\n    results: Result[];\n    hasNext: boolean;\n}\n\nconst fetcher: Fetcher <{query: string; offset: number}, Results> = async ({query, offset}, fetchWrapper) => {\n    const [lookupData, searchData] = await Promise.all([\n        fetchWrapper<SRCResult<SRCUser[]>>(`${SPEEDRUN_COM_URL}/users?lookup=${query}`),\n        fetchWrapper<SRCPaginatedResult<SRCUser[]>>(`${SPEEDRUN_COM_URL}/users?name=${query}&offset=${offset}`)\n    ]);\n\n    return {\n        exactMatch: lookupData.data.length > 0 ? {\n            id: lookupData.data[0].id,\n            name: lookupData.data[0].names.international\n        } : null,\n        results: searchData.data.map(user => ({id: user.id, name: user.names.international})),\n        hasNext: searchData.pagination.links.find(link => link.rel == \"next\") !== undefined\n    };\n};\n\nconst SearchPage: FC = () => {\n    const {query } = useParams<{query: string}>();\n    const searchParams = new URLSearchParams(useLocation().search);\n\n    const strOffset = searchParams.get(\"offset\");\n    const offset = strOffset ? parseInt(strOffset) : 0;\n\n    const [data, loading, error] = useFetcher(fetcher, {query, offset},[query,offset]);\n\n    if(error) return <ErrorAlert error={error} />;\n    if(loading) return <LoadingAlert/>;\n\n    return (\n        <>\n            <h3>Results for {query}:</h3>\n            <ul>\n                {data?.exactMatch && <p><b>An exact match was found: <Link to={`/user/${data.exactMatch.id}`}>{data.exactMatch.name} </Link></b></p> }\n                {data?.results && data.results.length > 0 ? data.results.map(({id, name}) => (\n                    <li key={id}><Link to={`/user/${id}`}>{name} </Link></li>\n                )) : (<p>No users found. <Link to=\"/\">Search again?</Link></p>)}\n            </ul>\n\n            {offset > 0 && (<Link to={`/search/${query}?offset=${Math.max(0, offset - 20)}`}>&lt;Prev</Link>)}\n            {offset > 0 && data?.hasNext && \" - \"}\n            {data?.hasNext && (<Link to={`/search/${query}?offset=${offset + 20}`}>Next &gt;</Link>)}\n        </>\n    );\n};\n\nexport default SearchPage;","import React, { FC } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport GraphPage from \"./pages/GraphPage\";\nimport HomePage from \"./pages/HomePage\";\nimport UserPage from \"./pages/UserPage\";\nimport Container from \"react-bootstrap/Container\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SearchPage from \"./pages/SearchPage\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport { Github } from \"react-bootstrap-icons\";\nimport CacheProvider from \"./utils/CacheProvider\";\n\nexport const SPEEDRUN_COM_URL = \"https://speedrun.com/api/v1\";\n\nconst App : FC = ()  => {\n    return (\n        <Router>\n            <CacheProvider>\n                <Navbar bg=\"dark\" expand=\"lg\" className=\"mb-4\" style={{justifyContent:\"space-between\", paddingLeft: \"1em\", paddingRight: \"1em\"}}>\n                    <Nav>\n                        <Navbar.Brand href=\"#/\" style={{color: \"white\"}}>Speedrun PB Grapher</Navbar.Brand>\n                        <Nav.Link href=\"#/\" style={{color: \"white\"}}>Home</Nav.Link>\n                    </Nav>\n                    <Nav className=\"float-right\">\n                        <SearchComponent/>\n                        <Nav.Link aria-label=\"Project Github\" href=\"https://github.com/Hurricane996/speedrun-pb-graph\"><Github style={{color: \"white\"}} className=\"ml-auto\"/></Nav.Link>\n                    </Nav>\n                </Navbar>\n                <Container>\n                    <Switch>\n                        <Route path=\"/user/:id\" exact>\n                            <UserPage />\n                        </Route>\n                        <Route path=\"/graph/il/:userId/:levelId/:categoryId\" exact>\n                            <GraphPage/>\n                        </Route>\n                        <Route path=\"/graph/:userId/:categoryId\" exact>\n                            <GraphPage/>\n                        </Route>\n                        <Route path=\"/search/:query\" exact>\n                            <SearchPage />\n                        </Route>\n                        <Route path=\"/\" exact>\n                            <HomePage/>\n                        </Route>\n                        <Route>404</Route>\n                    </Switch>\n                </Container>\n            </CacheProvider>\n        </Router>\n    );\n};\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}